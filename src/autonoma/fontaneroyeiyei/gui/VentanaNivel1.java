/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package autonoma.fontaneroyeiyei.gui;

import autonoma.fontaneroyeiyei.elements.Casa;
import autonoma.fontaneroyeiyei.elements.FontaneroBueno;
import autonoma.fontaneroyeiyei.elements.FontaneroMaldadoso;
import autonoma.fontaneroyeiyei.elements.GestorJuego;
import autonoma.fontaneroyeiyei.elements.HitBox;
import autonoma.fontaneroyeiyei.elements.Recorrido;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.Timer;
import static javax.swing.WindowConstants.EXIT_ON_CLOSE;

/**
 *
 * @author Mateo Quintero <mateo.quinterom@autonoma.edu.co>
 * @version 1.0.0
 * @since 20250501
 * @see autonoma.fontaneroyeiyei.gui
 */
public class VentanaNivel1 extends javax.swing.JDialog {

    private GestorJuego juego;
    private ImageIcon fondo;
    private FontaneroBueno f;
    private FontaneroMaldadoso fmalo;
    private BufferedImage buffer; 
    private boolean timerGameOverStarted;
    private Clip clip;
    private ArrayList<HitBox> hitBoxs = new ArrayList<>();
    




    public VentanaNivel1(java.awt.Frame parent, boolean modal, GestorJuego juego) {
        super(parent, modal);
        initComponents();

        
        this.juego = juego;
        
        ///se va indicar la siguientes posiciones para ej jugador
       
        this.f = new FontaneroBueno("teo");
        
        //se limita el mapa de personaje en ese nivel para que no salga a la parte blanca
        f.setAlturaMax(700);
        f.setLargoMax(700);
        
        
        // se pone el fontanero en el lado de la izquierda
        f.setY(160);
        f.setX(600);
        
        //se crea la hit box del nivel 

                    
        //PRIMER HITBOX
        HitBox SegundoPiso = new HitBox(180, 250, 100, 530);
        
        hitBoxs.addFirst(SegundoPiso);
        //SEGUNDO HITBOX
        HitBox escalas = new HitBox(180, 250, 250, 30);
        hitBoxs.addLast(escalas);
        
        f.setHitBoxs(hitBoxs);
        
                
        Casa casaNivel1 = juego.getCasaNivel1(); 

        
        


        // crea el fontanero malo
        FontaneroMaldadoso fmalo = new FontaneroMaldadoso(600, 0, 80, 80, casaNivel1);

        // crea el recorrido y se lo asigna
        ArrayList<Recorrido> recorridos = new ArrayList<>();
        Recorrido recorridoPiso2 = new Recorrido("Recorrido Piso 2", 600 ,140);
        recorridos.add(recorridoPiso2);
        fmalo.setInicioX(600);
        fmalo.setX(600);
        fmalo.setY(160);


        Thread hiloMalo = new Thread(fmalo);
        hiloMalo.start();
        
        
//        Thread hiloMalo = new Thread(fmalo);
//        hiloMalo.start();
                
        
        setTitle("FontaneroYeiYei Nivel 1");
        setLocationRelativeTo(null);
        setResizable(false);


        this.setSize(700,700);
        setResizable(false);
        this.setLocationRelativeTo(null);
        
        try{ 
            this.setIconImage(new ImageIcon(getClass().getResource("/autonoma/FontaneroYeiYei/images/Logo.jpeg")).getImage());
            fondo = new ImageIcon(getClass().getResource("/autonoma/FontaneroYeiYei/images/casa1.jpg"));
        }catch(NullPointerException e){
            System.out.println("Imagen no encontrada");
            
        }
        
        
        // crea panelFondo SIN usar fmalo todavÃ­a
        JPanel panelFondo = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(fondo.getImage(), 0, 0, getWidth(), getHeight(), this);
                f.paint(g);
                fmalo.paint(g);
                fmalo.run();
            }
        };
        
        
        //  agrega panel al JFrame y lanza el hilo
        setContentPane(panelFondo);

        Timer timer = new Timer(30, e -> panelFondo.repaint());
        timer.start();
        
        setContentPane(panelFondo);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
        
        if(evt.getKeyCode() == KeyEvent.VK_Q)
        {
            System.exit(0);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_UP |
           evt.getKeyCode() == KeyEvent.VK_DOWN |
           evt.getKeyCode() == KeyEvent.VK_LEFT |
           evt.getKeyCode() == KeyEvent.VK_RIGHT)
        {
                  
            try {
                
                f.move(evt.getKeyCode());
            } catch (IOException ex) {
                Logger.getLogger(VentanaNivel1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        this.repaint();

        
        ;
    }
    
    
        
    }//GEN-LAST:event_formKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

